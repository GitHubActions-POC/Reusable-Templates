name: Maven-Build-Reusable-workflow
on:
  workflow_call:
    inputs:
      GLOBAL_MY_MAPPED_ENV_VAR:
        required: true
        type: string
      package:
        required: true
        type: string
    secrets:
      ADOVARIABLE:
        required: true
jobs:
  Maven-Build:
    runs-on: ubuntu-latest    
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
    - run: |-
        echo "Using an input-macro works for secrets var : ${{ secrets.ADOVARIABLE }}"
        echo "Using the env var directly does not work : ${{ inputs.GLOBAL_MY_MAPPED_ENV_VAR }}"
      shell: bash
    - name: Setup Java 8
      uses: actions/setup-java@v3.12.0
      with:
        distribution: zulu
        java-version: '8'
    - name: Run maven
      run: mvn --file ${{ inputs.package }} package
      env:
        MAVEN_OPTS: "-Xmx3072m"  
    - uses: actions/github-script@v6.4.0
      env:
        TARGET_FOLDER: "${{ runner.temp }}"
        CONTENTS: "**"
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"
        script: |-
          const fs = require('fs').promises
          const path = require('path')
          const target = path.resolve(process.env.TARGET_FOLDER)
          process.chdir(process.env.SOURCE_FOLDER || '.')
          if (process.env.CLEAN_TARGET_FOLDER === 'true') await io.rmRF(target)
          const flattenFolders = process.env.FLATTEN_FOLDERS === 'true'
          const options = {force: process.env.OVERWRITE === 'true'}
          const globber = await glob.create(process.env.CONTENTS || '**')
          for await (const file of globber.globGenerator()) {
            if ((await fs.lstat(file)).isDirectory()) continue
            const filename = flattenFolders ? path.basename(file) : file.substring(process.cwd().length)
            const dest = path.join(target, filename)
            await io.mkdirP(path.dirname(dest))
            await io.cp(file, dest, options)
          }    
